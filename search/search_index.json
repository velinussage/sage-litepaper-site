{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83d\udcdc Sage Litepaper The first permissionless protocol for incentivized agent context sharing. Sage is a protocol for community\u2011owned prompt libraries. Publish once to IPFS , govern upgrades through your SubDAO, and let agents automatically discover the best approved version. As libraries improve, rewards flow back to the people who make them useful. Follow the founder @VelinusSage for updates. Why Now? AI moves fast; community memory doesn\u2019t. Prompts and context end up in scattered docs, chats, and private repos. As models change, good patterns go stale. There\u2019s no portable way to store, version, and improve shared context, or to credit and reward the people who advance it. Sage solves four problems: No Shared Source of Truth Everyone works from copies; there\u2019s no trusted, up\u2011to\u2011date version with history. Prompt Decay Models evolve weekly. Yesterday\u2019s best pattern quietly breaks, and the update doesn\u2019t reach everyone. Communities need a place to vote, fork, and ship updates together. No Attribution by Default Reuse happens without provenance or revenue share, so creators aren\u2019t rewarded. No Sustainable Funding Loop Communities lack an easy way to pool funds, pay contributors, and reinvest wins so improvements compound over time. Sage exists to make community knowledge durable, discoverable, and rewarded. What Sage Is Sage is a protocol that lets communities publish prompt libraries on IPFS , register them on-chain, and govern upgrades through their own SubDAO . A manifest file defines an entire library, and one proposal updates the whole set. Discoverability runs through a subgraph and an MCP server so agents can search and pull context directly. Interfaces include a CLI , a web app, and Model Context Protocol ( MCP ) endpoints for agent tooling like Claude Desktop. Publish : Push a manifest and prompt files to IPFS . Get immutable CIDs. Propose : Each manifest is one governance proposal in your SubDAO . Vote, queue, and execute through a Timelock. Discover : Agents, the CLI , and the web app read via subgraph first and fall back to RPC. Use : MCP tools return content by CID so agents can load context on demand. This approach gives AI artists, prompt engineers, and research groups an easy path to share and store their working prompts with permanence, version history, and clear community ownership. What Makes It Different Community First Each community has a SubDAO with its own library, governance, and treasury. Forks and remixing are explicit, not implicit. Curation happens in public. Manifest\u2011First Upgrades Ship atomic updates to entire collections. That cuts gas, reduces proposal fatigue, and keeps libraries coherent. Incentives Built-In Boosts reward participation. Bounties pay for new prompts. Premiums let creators sell encrypted content with on-chain receipts. Proceeds route to SubDAO and protocol treasuries. AI-Assisted Authoring : A built-in CLI agent helps you write new prompts from scratch. Use sage prompt generate to turn a simple topic into a structured, high-quality prompt file, ready for use and curation. Agent\u2011Native Discovery An MCP server exposes search, fetch, and manifest validation. Agents can query libraries directly, then pull the exact context they need. Production on Base Contracts, subgraph, and flows run on Base Sepolia today, designed to graduate to Base mainnet following a gated launch sequence. The Self\u2011Improving Metaprompting Loop Publish Authors push a library with a human\u2011readable manifest. IPFS CIDs anchor content. Curate The community proposes variants, votes, and executes upgrades. Approver Councils can be badge\u2011gated for fast tracks when needed. Reward Boosts pay voters or contributors for specific decisions. Bounties fund new prompts. Premiums monetize high\u2011effort work. Treasury routes and override guards are set by governance. Use and Measure Agents fetch context via MCP . Communities gauge a prompt's value through on-chain signals like forks, bounty completions, and governance proposals, creating a feedback loop for continuous improvement. Core Components Smart Contracts on Base SubDAO Factory, Governor and Timelock, LibraryRegistry, PromptRegistry, Treasury modules, optional LBP and Bonding integrations. Storage and Discovery IPFS for payloads, subgraph\u2011first reads across CLI , web, and MCP . Tooling A complete CLI , a web app for discovery and drafting, and an MCP stdio server that plugs into Claude Desktop or an HTTP server for other agents. Technical Overview At a high level, Sage combines three familiar building blocks: On\u2011chain governance (Governor + Timelock) for trusted upgrades IPFS for content and manifests with immutable CIDs An index layer (subgraph + MCP) for search and agent access Updates are \u201cmanifest\u2011first\u201d: one proposal approves a new manifest CID and atomically updates the entire library. Agents read the subgraph first and fall back to RPC, so they always see the latest approved version. Incentives and Ownership Sage powers three on\u2011chain incentive rails that communities can combine. 1. Boosts Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize . 2. Bounties Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals. 3. Premium Prompts Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed. Paid Pinning Revenue When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury. SBTs and Badge\u2011Gated Fast Tracks Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance. Governance Modes (Simple) Communities can start simple and evolve their governance shape over time: Bootstrap: member list with proposal cooldowns and refundable deposits to prevent spam. Token: standard ERC20Votes quorum using SAGE or a SubDAO stake token. Operator: trusted multisig or owner executes via Timelock for fast iteration. The CLI can plan/apply role changes safely through proposals or Safe transactions. For Communities AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve. Why Base In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries. Security and Launch Status Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap. Token and Treasury, in Plain Terms The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage. From On-Chain to IDE: The Power of the CLI Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and your local development environment. It's designed to pull complex, on-chain agent systems directly into your workflow and format them for professional IDEs. With a single command, sage context pull , you can parse an entire SubDAO 's curated library and generate ready-to-use local files for specific editing environments: For Cursor: Generate a .cursorrules file, allowing you to reference the entire on-chain library directly within the Cursor IDE. For Windsurf: Generate a .windsurf/context.md file, providing structured context for agentic development in Windsurf. This makes decentralized curation a practical, daily tool inside your IDE. Get Started Connect sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address) Roadmap Completed SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Full testnet launch with airdrop incentives and Discord; CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most. License MIT. See the repository for full docs, guides, and examples.","title":"Introduction"},{"location":"#sage-litepaper","text":"","title":"\ud83d\udcdc Sage Litepaper"},{"location":"#the-first-permissionless-protocol-for-incentivized-agent-context-sharing","text":"Sage is a protocol for community\u2011owned prompt libraries. Publish once to IPFS , govern upgrades through your SubDAO, and let agents automatically discover the best approved version. As libraries improve, rewards flow back to the people who make them useful. Follow the founder @VelinusSage for updates.","title":"The first permissionless protocol for incentivized agent context sharing."},{"location":"#why-now","text":"AI moves fast; community memory doesn\u2019t. Prompts and context end up in scattered docs, chats, and private repos. As models change, good patterns go stale. There\u2019s no portable way to store, version, and improve shared context, or to credit and reward the people who advance it. Sage solves four problems: No Shared Source of Truth Everyone works from copies; there\u2019s no trusted, up\u2011to\u2011date version with history. Prompt Decay Models evolve weekly. Yesterday\u2019s best pattern quietly breaks, and the update doesn\u2019t reach everyone. Communities need a place to vote, fork, and ship updates together. No Attribution by Default Reuse happens without provenance or revenue share, so creators aren\u2019t rewarded. No Sustainable Funding Loop Communities lack an easy way to pool funds, pay contributors, and reinvest wins so improvements compound over time. Sage exists to make community knowledge durable, discoverable, and rewarded.","title":"Why Now?"},{"location":"#what-sage-is","text":"Sage is a protocol that lets communities publish prompt libraries on IPFS , register them on-chain, and govern upgrades through their own SubDAO . A manifest file defines an entire library, and one proposal updates the whole set. Discoverability runs through a subgraph and an MCP server so agents can search and pull context directly. Interfaces include a CLI , a web app, and Model Context Protocol ( MCP ) endpoints for agent tooling like Claude Desktop. Publish : Push a manifest and prompt files to IPFS . Get immutable CIDs. Propose : Each manifest is one governance proposal in your SubDAO . Vote, queue, and execute through a Timelock. Discover : Agents, the CLI , and the web app read via subgraph first and fall back to RPC. Use : MCP tools return content by CID so agents can load context on demand. This approach gives AI artists, prompt engineers, and research groups an easy path to share and store their working prompts with permanence, version history, and clear community ownership.","title":"What Sage Is"},{"location":"#what-makes-it-different","text":"Community First Each community has a SubDAO with its own library, governance, and treasury. Forks and remixing are explicit, not implicit. Curation happens in public. Manifest\u2011First Upgrades Ship atomic updates to entire collections. That cuts gas, reduces proposal fatigue, and keeps libraries coherent. Incentives Built-In Boosts reward participation. Bounties pay for new prompts. Premiums let creators sell encrypted content with on-chain receipts. Proceeds route to SubDAO and protocol treasuries. AI-Assisted Authoring : A built-in CLI agent helps you write new prompts from scratch. Use sage prompt generate to turn a simple topic into a structured, high-quality prompt file, ready for use and curation. Agent\u2011Native Discovery An MCP server exposes search, fetch, and manifest validation. Agents can query libraries directly, then pull the exact context they need. Production on Base Contracts, subgraph, and flows run on Base Sepolia today, designed to graduate to Base mainnet following a gated launch sequence.","title":"What Makes It Different"},{"location":"#the-selfimproving-metaprompting-loop","text":"Publish Authors push a library with a human\u2011readable manifest. IPFS CIDs anchor content. Curate The community proposes variants, votes, and executes upgrades. Approver Councils can be badge\u2011gated for fast tracks when needed. Reward Boosts pay voters or contributors for specific decisions. Bounties fund new prompts. Premiums monetize high\u2011effort work. Treasury routes and override guards are set by governance. Use and Measure Agents fetch context via MCP . Communities gauge a prompt's value through on-chain signals like forks, bounty completions, and governance proposals, creating a feedback loop for continuous improvement.","title":"The Self\u2011Improving Metaprompting Loop"},{"location":"#core-components","text":"Smart Contracts on Base SubDAO Factory, Governor and Timelock, LibraryRegistry, PromptRegistry, Treasury modules, optional LBP and Bonding integrations. Storage and Discovery IPFS for payloads, subgraph\u2011first reads across CLI , web, and MCP . Tooling A complete CLI , a web app for discovery and drafting, and an MCP stdio server that plugs into Claude Desktop or an HTTP server for other agents.","title":"Core Components"},{"location":"#technical-overview","text":"At a high level, Sage combines three familiar building blocks: On\u2011chain governance (Governor + Timelock) for trusted upgrades IPFS for content and manifests with immutable CIDs An index layer (subgraph + MCP) for search and agent access Updates are \u201cmanifest\u2011first\u201d: one proposal approves a new manifest CID and atomically updates the entire library. Agents read the subgraph first and fall back to RPC, so they always see the latest approved version.","title":"Technical Overview"},{"location":"#incentives-and-ownership","text":"Sage powers three on\u2011chain incentive rails that communities can combine.","title":"Incentives and Ownership"},{"location":"#1-boosts","text":"Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize .","title":"1. Boosts"},{"location":"#2-bounties","text":"Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals.","title":"2. Bounties"},{"location":"#3-premium-prompts","text":"Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed.","title":"3. Premium Prompts"},{"location":"#paid-pinning-revenue","text":"When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury.","title":"Paid Pinning Revenue"},{"location":"#sbts-and-badgegated-fast-tracks","text":"Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance.","title":"SBTs and Badge\u2011Gated Fast Tracks"},{"location":"#governance-modes-simple","text":"Communities can start simple and evolve their governance shape over time: Bootstrap: member list with proposal cooldowns and refundable deposits to prevent spam. Token: standard ERC20Votes quorum using SAGE or a SubDAO stake token. Operator: trusted multisig or owner executes via Timelock for fast iteration. The CLI can plan/apply role changes safely through proposals or Safe transactions.","title":"Governance Modes (Simple)"},{"location":"#for-communities","text":"AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve.","title":"For Communities"},{"location":"#why-base","text":"In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries.","title":"Why Base"},{"location":"#security-and-launch-status","text":"Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap.","title":"Security and Launch Status"},{"location":"#token-and-treasury-in-plain-terms","text":"The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage.","title":"Token and Treasury, in Plain Terms"},{"location":"#from-on-chain-to-ide-the-power-of-the-cli","text":"Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and your local development environment. It's designed to pull complex, on-chain agent systems directly into your workflow and format them for professional IDEs. With a single command, sage context pull , you can parse an entire SubDAO 's curated library and generate ready-to-use local files for specific editing environments: For Cursor: Generate a .cursorrules file, allowing you to reference the entire on-chain library directly within the Cursor IDE. For Windsurf: Generate a .windsurf/context.md file, providing structured context for agentic development in Windsurf. This makes decentralized curation a practical, daily tool inside your IDE.","title":"From On-Chain to IDE: The Power of the CLI"},{"location":"#get-started","text":"Connect sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address)","title":"Get Started"},{"location":"#roadmap","text":"Completed SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Full testnet launch with airdrop incentives and Discord; CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most.","title":"Roadmap"},{"location":"#license","text":"MIT. See the repository for full docs, guides, and examples.","title":"License"},{"location":"sections/01-why-now/","text":"Why Now? AI moves fast; community memory doesn\u2019t. Prompts and context end up in scattered docs, chats, and private repos. As models change, good patterns go stale. There\u2019s no portable way to store, version, and improve shared context, or to credit and reward the people who advance it. Sage solves four problems: No Shared Source of Truth Everyone works from copies; there\u2019s no trusted, up\u2011to\u2011date version with history. Prompt Decay Models evolve weekly. Yesterday\u2019s best pattern quietly breaks, and the update doesn\u2019t reach everyone. Communities need a place to vote, fork, and ship updates together. No Attribution by Default Reuse happens without provenance or revenue share, so creators aren\u2019t rewarded. No Sustainable Funding Loop Communities lack an easy way to pool funds, pay contributors, and reinvest wins so improvements compound over time. Sage exists to make community knowledge durable, discoverable, and rewarded.","title":"Why Now?"},{"location":"sections/01-why-now/#why-now","text":"AI moves fast; community memory doesn\u2019t. Prompts and context end up in scattered docs, chats, and private repos. As models change, good patterns go stale. There\u2019s no portable way to store, version, and improve shared context, or to credit and reward the people who advance it. Sage solves four problems: No Shared Source of Truth Everyone works from copies; there\u2019s no trusted, up\u2011to\u2011date version with history. Prompt Decay Models evolve weekly. Yesterday\u2019s best pattern quietly breaks, and the update doesn\u2019t reach everyone. Communities need a place to vote, fork, and ship updates together. No Attribution by Default Reuse happens without provenance or revenue share, so creators aren\u2019t rewarded. No Sustainable Funding Loop Communities lack an easy way to pool funds, pay contributors, and reinvest wins so improvements compound over time. Sage exists to make community knowledge durable, discoverable, and rewarded.","title":"Why Now?"},{"location":"sections/02-what-sage-is/","text":"What Sage Is Sage is a protocol that lets communities publish prompt libraries on IPFS , register them on-chain, and govern upgrades through their own SubDAO . A manifest file defines an entire library, and one proposal updates the whole set. Discoverability runs through a subgraph and an MCP server so agents can search and pull context directly. Interfaces include a CLI , a web app, and Model Context Protocol ( MCP ) endpoints for agent tooling like Claude Desktop. Publish : Push a manifest and prompt files to IPFS . Get immutable CIDs. Propose : Each manifest is one governance proposal in your SubDAO . Vote, queue, and execute through a Timelock. Discover : Agents, the CLI , and the web app read via subgraph first and fall back to RPC. Use : MCP tools return content by CID so agents can load context on demand. This approach gives AI artists, prompt engineers, and research groups an easy path to share and store their working prompts with permanence, version history, and clear community ownership.","title":"What Sage Is"},{"location":"sections/02-what-sage-is/#what-sage-is","text":"Sage is a protocol that lets communities publish prompt libraries on IPFS , register them on-chain, and govern upgrades through their own SubDAO . A manifest file defines an entire library, and one proposal updates the whole set. Discoverability runs through a subgraph and an MCP server so agents can search and pull context directly. Interfaces include a CLI , a web app, and Model Context Protocol ( MCP ) endpoints for agent tooling like Claude Desktop. Publish : Push a manifest and prompt files to IPFS . Get immutable CIDs. Propose : Each manifest is one governance proposal in your SubDAO . Vote, queue, and execute through a Timelock. Discover : Agents, the CLI , and the web app read via subgraph first and fall back to RPC. Use : MCP tools return content by CID so agents can load context on demand. This approach gives AI artists, prompt engineers, and research groups an easy path to share and store their working prompts with permanence, version history, and clear community ownership.","title":"What Sage Is"},{"location":"sections/03-what-makes-it-different/","text":"What Makes It Different Community First Each community has a SubDAO with its own library, governance, and treasury. Forks and remixing are explicit, not implicit. Curation happens in public. Manifest\u2011First Upgrades Ship atomic updates to entire collections. That cuts gas, reduces proposal fatigue, and keeps libraries coherent. Incentives Built-In Boosts reward participation. Bounties pay for new prompts. Premiums let creators sell encrypted content with on-chain receipts. Proceeds route to SubDAO and protocol treasuries. AI-Assisted Authoring : A built-in CLI agent helps you write new prompts from scratch. Use sage prompt generate to turn a simple topic into a structured, high-quality prompt file, ready for use and curation. Agent\u2011Native Discovery An MCP server exposes search, fetch, and manifest validation. Agents can query libraries directly, then pull the exact context they need. Production on Base Contracts, subgraph, and flows run on Base Sepolia today, designed to graduate to Base mainnet following a gated launch sequence.","title":"What\u2019s Different"},{"location":"sections/03-what-makes-it-different/#what-makes-it-different","text":"Community First Each community has a SubDAO with its own library, governance, and treasury. Forks and remixing are explicit, not implicit. Curation happens in public. Manifest\u2011First Upgrades Ship atomic updates to entire collections. That cuts gas, reduces proposal fatigue, and keeps libraries coherent. Incentives Built-In Boosts reward participation. Bounties pay for new prompts. Premiums let creators sell encrypted content with on-chain receipts. Proceeds route to SubDAO and protocol treasuries. AI-Assisted Authoring : A built-in CLI agent helps you write new prompts from scratch. Use sage prompt generate to turn a simple topic into a structured, high-quality prompt file, ready for use and curation. Agent\u2011Native Discovery An MCP server exposes search, fetch, and manifest validation. Agents can query libraries directly, then pull the exact context they need. Production on Base Contracts, subgraph, and flows run on Base Sepolia today, designed to graduate to Base mainnet following a gated launch sequence.","title":"What Makes It Different"},{"location":"sections/04-the-selfimproving-metaprompting-loop/","text":"The Self\u2011Improving Metaprompting Loop Publish Authors push a library with a human\u2011readable manifest. IPFS CIDs anchor content. Curate The community proposes variants, votes, and executes upgrades. Approver Councils can be badge\u2011gated for fast tracks when needed. Reward Boosts pay voters or contributors for specific decisions. Bounties fund new prompts. Premiums monetize high\u2011effort work. Treasury routes and override guards are set by governance. Use and Measure Agents fetch context via MCP . Communities gauge a prompt's value through on-chain signals like forks, bounty completions, and governance proposals, creating a feedback loop for continuous improvement.","title":"Metaprompting Loop"},{"location":"sections/04-the-selfimproving-metaprompting-loop/#the-selfimproving-metaprompting-loop","text":"Publish Authors push a library with a human\u2011readable manifest. IPFS CIDs anchor content. Curate The community proposes variants, votes, and executes upgrades. Approver Councils can be badge\u2011gated for fast tracks when needed. Reward Boosts pay voters or contributors for specific decisions. Bounties fund new prompts. Premiums monetize high\u2011effort work. Treasury routes and override guards are set by governance. Use and Measure Agents fetch context via MCP . Communities gauge a prompt's value through on-chain signals like forks, bounty completions, and governance proposals, creating a feedback loop for continuous improvement.","title":"The Self\u2011Improving Metaprompting Loop"},{"location":"sections/05-core-components/","text":"Core Components Smart Contracts on Base SubDAO Factory, Governor and Timelock, LibraryRegistry, PromptRegistry, Treasury modules, optional LBP and Bonding integrations. Storage and Discovery IPFS for payloads, subgraph\u2011first reads across CLI , web, and MCP . Tooling A complete CLI , a web app for discovery and drafting, and an MCP stdio server that plugs into Claude Desktop or an HTTP server for other agents.","title":"Core Components"},{"location":"sections/05-core-components/#core-components","text":"Smart Contracts on Base SubDAO Factory, Governor and Timelock, LibraryRegistry, PromptRegistry, Treasury modules, optional LBP and Bonding integrations. Storage and Discovery IPFS for payloads, subgraph\u2011first reads across CLI , web, and MCP . Tooling A complete CLI , a web app for discovery and drafting, and an MCP stdio server that plugs into Claude Desktop or an HTTP server for other agents.","title":"Core Components"},{"location":"sections/06-incentives-and-ownership/","text":"Incentives and Ownership Sage powers three on\u2011chain incentive rails that communities can combine. 1. Boosts Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize . 2. Bounties Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals. 3. Premium Prompts Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed. Paid Pinning Revenue When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury. SBTs and Badge\u2011Gated Fast Tracks Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance.","title":"Incentives & Ownership"},{"location":"sections/06-incentives-and-ownership/#incentives-and-ownership","text":"Sage powers three on\u2011chain incentive rails that communities can combine.","title":"Incentives and Ownership"},{"location":"sections/06-incentives-and-ownership/#1-boosts","text":"Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize .","title":"1. Boosts"},{"location":"sections/06-incentives-and-ownership/#2-bounties","text":"Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals.","title":"2. Bounties"},{"location":"sections/06-incentives-and-ownership/#3-premium-prompts","text":"Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed.","title":"3. Premium Prompts"},{"location":"sections/06-incentives-and-ownership/#paid-pinning-revenue","text":"When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury.","title":"Paid Pinning Revenue"},{"location":"sections/06-incentives-and-ownership/#sbts-and-badgegated-fast-tracks","text":"Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance.","title":"SBTs and Badge\u2011Gated Fast Tracks"},{"location":"sections/06-technical-overview/","text":"Technical Overview At a high level, Sage combines three familiar building blocks: On\u2011chain governance (Governor + Timelock) for trusted upgrades IPFS for content and manifests with immutable CIDs An index layer (subgraph + MCP) for search and agent access Updates are \u201cmanifest\u2011first\u201d: one proposal approves a new manifest CID and atomically updates the entire library. Agents read the subgraph first and fall back to RPC, so they always see the latest approved version.","title":"Technical Overview"},{"location":"sections/06-technical-overview/#technical-overview","text":"At a high level, Sage combines three familiar building blocks: On\u2011chain governance (Governor + Timelock) for trusted upgrades IPFS for content and manifests with immutable CIDs An index layer (subgraph + MCP) for search and agent access Updates are \u201cmanifest\u2011first\u201d: one proposal approves a new manifest CID and atomically updates the entire library. Agents read the subgraph first and fall back to RPC, so they always see the latest approved version.","title":"Technical Overview"},{"location":"sections/07-for-communities/","text":"For Communities AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve.","title":"For Communities"},{"location":"sections/07-for-communities/#for-communities","text":"AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve.","title":"For Communities"},{"location":"sections/07-incentives-and-ownership/","text":"Incentives and Ownership Sage powers three on\u2011chain incentive rails that communities can combine. 1. Boosts Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize . 2. Bounties Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals. 3. Premium Prompts Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed. Paid Pinning Revenue When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury. SBTs and Badge\u2011Gated Fast Tracks Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance.","title":"Incentives and Ownership"},{"location":"sections/07-incentives-and-ownership/#incentives-and-ownership","text":"Sage powers three on\u2011chain incentive rails that communities can combine.","title":"Incentives and Ownership"},{"location":"sections/07-incentives-and-ownership/#1-boosts","text":"Parameterizable rewards for governance participation or contributor actions. Two manager contracts exist: Direct manager for per\u2011voter payouts tied to a proposal. Merkle manager for pooled funding and claim\u2011by\u2011proof. Both paths are governed through the SubDAO Timelock. The CLI supports create , fund , set-root , status , claim , and finalize .","title":"1. Boosts"},{"location":"sections/07-incentives-and-ownership/#2-bounties","text":"Announce tasks, award winners, and pay out from the Timelock. This system is event-only by design. Fund the Timelock with ETH or an ERC\u201120 before executing payout proposals.","title":"2. Bounties"},{"location":"sections/07-incentives-and-ownership/#3-premium-prompts","text":"Encrypt content client-side, pin to IPFS , and gate decryption with Lit v7 and ERC\u20111155 receipts. Buyers pay in USDC, get a receipt NFT, and decrypt locally with session signatures. Pricing and treasury routing are on\u2011chain. No reveal server is needed.","title":"3. Premium Prompts"},{"location":"sections/07-incentives-and-ownership/#paid-pinning-revenue","text":"When libraries are pushed with paid pinning, the service receives USDC and calls on-chain attribution. The default split routes 80% to the SubDAO treasury and 20% to the protocol treasury. In production, an HTTP\u2011native payment flow (x402) can collect USDC at request time and attribute proceeds automatically. For communities, this means: pay once to persist content; revenue lands transparently in your treasury.","title":"Paid Pinning Revenue"},{"location":"sections/07-incentives-and-ownership/#sbts-and-badgegated-fast-tracks","text":"Non\u2011transferable SBTs recognize contributors and can gate Approver Council permissions to move quickly on scoped updates, with function selectors allow\u2011listed by governance.","title":"SBTs and Badge\u2011Gated Fast Tracks"},{"location":"sections/08-governance-modes-simple/","text":"Governance Modes (Simple) Communities can start simple and evolve their governance shape over time: Bootstrap: member list with proposal cooldowns and refundable deposits to prevent spam. Token: standard ERC20Votes quorum using SAGE or a SubDAO stake token. Operator: trusted multisig or owner executes via Timelock for fast iteration. The CLI can plan/apply role changes safely through proposals or Safe transactions.","title":"Governance Modes (Simple)"},{"location":"sections/08-governance-modes-simple/#governance-modes-simple","text":"Communities can start simple and evolve their governance shape over time: Bootstrap: member list with proposal cooldowns and refundable deposits to prevent spam. Token: standard ERC20Votes quorum using SAGE or a SubDAO stake token. Operator: trusted multisig or owner executes via Timelock for fast iteration. The CLI can plan/apply role changes safely through proposals or Safe transactions.","title":"Governance Modes (Simple)"},{"location":"sections/08-why-base/","text":"Why Base In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries.","title":"Why Base"},{"location":"sections/08-why-base/#why-base","text":"In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries.","title":"Why Base"},{"location":"sections/09-for-communities/","text":"For Communities AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve.","title":"For Communities"},{"location":"sections/09-for-communities/#for-communities","text":"AI Artists and Prompt Engineers Store prompts permanently with IPFS CIDs, track versions, and get discovery out of the box. Add premium entries when you want to sell high\u2011effort sets. Research Groups and Guilds Use Bounties for new methods, Boosts for review cycles, and SBTs for reputation. Fork libraries when styles or standards diverge. Agent Builders Query the subgraph or MCP to pull the latest approved context and keep agents in sync as libraries evolve.","title":"For Communities"},{"location":"sections/09-security-and-launch-status/","text":"Security and Launch Status Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. - Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap.","title":"Security & Launch"},{"location":"sections/09-security-and-launch-status/#security-and-launch-status","text":"Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. - Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap.","title":"Security and Launch Status"},{"location":"sections/10-token-and-treasury-in-plain-terms/","text":"Token and Treasury, in Plain Terms The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage.","title":"Token & Treasury"},{"location":"sections/10-token-and-treasury-in-plain-terms/#token-and-treasury-in-plain-terms","text":"The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage.","title":"Token and Treasury, in Plain Terms"},{"location":"sections/10-why-base/","text":"Why Base In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries.","title":"Why Base"},{"location":"sections/10-why-base/#why-base","text":"In plain terms: Base keeps fees low, and has the most active community for AI\u2011adjacent projects today. That means cheaper governance, faster experiments, and better discovery for new libraries.","title":"Why Base"},{"location":"sections/11-from-on-chain-to-on-device-the-power-of-the-cli/","text":"From On-Chain to On-Device: The Power of the CLI Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and local development. It's designed to pull complex, on-chain agent systems directly into your workflow. With a single command, you can parse an entire SubDAO 's curated library and generate ready-to-use local files: For Custom GPTs: Generate a system-prompt.txt file, perfectly formatted for use in OpenAI's GPT builder. For Coding Agents: Output a series of .js or .py files, where each file contains a specific prompt for a step in your automated coding workflow. For AI Art: Create a JSON file of tested, high-quality prompts formatted for the Midjourney or Stable Diffusion API. This transforms decentralized curation into a practical, daily tool for developers and creators.","title":"On\u2011Device CLI"},{"location":"sections/11-from-on-chain-to-on-device-the-power-of-the-cli/#from-on-chain-to-on-device-the-power-of-the-cli","text":"Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and local development. It's designed to pull complex, on-chain agent systems directly into your workflow. With a single command, you can parse an entire SubDAO 's curated library and generate ready-to-use local files: For Custom GPTs: Generate a system-prompt.txt file, perfectly formatted for use in OpenAI's GPT builder. For Coding Agents: Output a series of .js or .py files, where each file contains a specific prompt for a step in your automated coding workflow. For AI Art: Create a JSON file of tested, high-quality prompts formatted for the Midjourney or Stable Diffusion API. This transforms decentralized curation into a practical, daily tool for developers and creators.","title":"From On-Chain to On-Device: The Power of the CLI"},{"location":"sections/11-security-and-launch-status/","text":"Security and Launch Status Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap.","title":"Security and Launch Status"},{"location":"sections/11-security-and-launch-status/#security-and-launch-status","text":"Security Model All writes flow through a Governor to a Timelock. Emergency pause, least-privilege roles, and upgrade paths are governance-controlled. Testnet Readiness Fully working end-to-end on Base Sepolia, including library updates, governance, treasury demos, MCP , and the app. Audits & Reviews : Contracts follow standard OZ Governor/Timelock patterns; external audits and public review precede mainnet. Role Boundaries : Sensitive actions route through the Timelock; council modules can allowlist function selectors for scoped, badge\u2011gated fast tracks. Operational Hygiene : Default timelock delays, proposal cooldowns, and per\u2011address caps reduce spam and operational risk during bootstrap.","title":"Security and Launch Status"},{"location":"sections/12-get-started/","text":"Get Started Install and connect npm i -g @sage-protocol/cli sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address)","title":"Get Started"},{"location":"sections/12-get-started/#get-started","text":"Install and connect npm i -g @sage-protocol/cli sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address)","title":"Get Started"},{"location":"sections/12-token-and-treasury-in-plain-terms/","text":"Token and Treasury, in Plain Terms The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage.","title":"Token and Treasury, in Plain Terms"},{"location":"sections/12-token-and-treasury-in-plain-terms/#token-and-treasury-in-plain-terms","text":"The Sage economy provides three distinct pillars for a self-sustaining ecosystem: Treasury Growth: The protocol's main treasury is funded by a one-time LBP launch and ongoing bond sales. This ensures the long-term financial health and stability of the SAGE token. Creator Rewards: SubDAOs receive grants from the main treasury and use those funds to post bounties . This creates a direct, work-to-earn loop for prompt engineers and other contributors. Community Governance: SAGE token holders stake their tokens in SubDAOs to vote on content curation and community decisions, ensuring that the most valuable context is promoted and rewarded. Fixed Supply : SAGE targets a fixed 1B supply at genesis with deflationary burns tied to creation/forking where appropriate. No inflation. Treasury Bootstrapping : A public LBP plus optional bond sales seed protocol\u2011owned liquidity and long\u2011term reserves; SubDAOs may receive grants. Coordination over Fees : Tokens primarily coordinate long\u2011horizon work (governance, reputation, commitment burns) rather than charging per\u2011prompt usage.","title":"Token and Treasury, in Plain Terms"},{"location":"sections/13-from-on-chain-to-ide-the-power-of-the-cli/","text":"From On-Chain to IDE: The Power of the CLI Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and your local development environment. It's designed to pull complex, on-chain agent systems directly into your workflow and format them for professional IDEs. With a single command, sage context pull , you can parse an entire SubDAO 's curated library and generate ready-to-use local files for specific editing environments: For Cursor: Generate a .cursorrules file, allowing you to reference the entire on-chain library directly within the Cursor IDE. For Windsurf: Generate a .windsurf/context.md file, providing structured context for agentic development in Windsurf. This makes decentralized curation a practical, daily tool inside your IDE.","title":"From On-Chain to IDE: The Power of the CLI"},{"location":"sections/13-from-on-chain-to-ide-the-power-of-the-cli/#from-on-chain-to-ide-the-power-of-the-cli","text":"Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and your local development environment. It's designed to pull complex, on-chain agent systems directly into your workflow and format them for professional IDEs. With a single command, sage context pull , you can parse an entire SubDAO 's curated library and generate ready-to-use local files for specific editing environments: For Cursor: Generate a .cursorrules file, allowing you to reference the entire on-chain library directly within the Cursor IDE. For Windsurf: Generate a .windsurf/context.md file, providing structured context for agentic development in Windsurf. This makes decentralized curation a practical, daily tool inside your IDE.","title":"From On-Chain to IDE: The Power of the CLI"},{"location":"sections/13-from-on-chain-to-on-device-the-power-of-the-cli/","text":"From On-Chain to On-Device: The Power of the CLI Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and local development. It's designed to pull complex, on-chain agent systems directly into your workflow. With a single command, you can parse an entire SubDAO 's curated library and generate ready-to-use local files: For Custom GPTs: Generate a system-prompt.txt file, perfectly formatted for use in OpenAI's GPT builder. For Coding Agents: Output a series of .js or .py files, where each file contains a specific prompt for a step in your automated coding workflow. For AI Art: Create a JSON file of tested, high-quality prompts formatted for the Midjourney or Stable Diffusion API. This transforms decentralized curation into a practical, daily tool for developers and creators.","title":"From On-Chain to On-Device: The Power of the CLI"},{"location":"sections/13-from-on-chain-to-on-device-the-power-of-the-cli/#from-on-chain-to-on-device-the-power-of-the-cli","text":"Beyond governance, the Sage CLI is a powerful bridge between the decentralized protocol and local development. It's designed to pull complex, on-chain agent systems directly into your workflow. With a single command, you can parse an entire SubDAO 's curated library and generate ready-to-use local files: For Custom GPTs: Generate a system-prompt.txt file, perfectly formatted for use in OpenAI's GPT builder. For Coding Agents: Output a series of .js or .py files, where each file contains a specific prompt for a step in your automated coding workflow. For AI Art: Create a JSON file of tested, high-quality prompts formatted for the Midjourney or Stable Diffusion API. This transforms decentralized curation into a practical, daily tool for developers and creators.","title":"From On-Chain to On-Device: The Power of the CLI"},{"location":"sections/13-roadmap/","text":"Roadmap Now SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Coming soon site, CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most.","title":"Roadmap"},{"location":"sections/13-roadmap/#roadmap","text":"Now SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Coming soon site, CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most.","title":"Roadmap"},{"location":"sections/14-get-started/","text":"Get Started Connect sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address)","title":"Get Started"},{"location":"sections/14-get-started/#get-started","text":"Connect sage wallet connect --type cast sage doctor Publish a library sage library scaffold-manifest sage library lint manifest.json sage library push manifest.json --pin sage library propose manifest.json --subdao 0xYourSubDAO Run the MCP server for agents node cli/mcp-server-stdio.js # or start HTTP and set NEXT_PUBLIC_MCP_HTTP_URL Tools include: search_onchain_prompts , get_prompt_content , list_subdaos , get_library_manifests . Offer a premium prompt sage premium-pre authsig --out ./authSig.json sage premium-pre publish --in ./prompt.md --name \"Title\" --description \"Desc\" \\ --subdao 0xYourSubDAO --price 2.50 --auth-sig ./authSig.json Incentivize participation # Direct manager, per-voter sage boost create --governor 0xGov --proposal-id 1 --per-voter 250000 --max-voters 100 --min-votes 1 # Merkle pool sage boost fund --proposal-id 1 --amount 25000000 sage boost set-root --manager 0xMerkle --proposal-id 1 --root 0xRoot Set up SBTs and an Approver Council sage sbt propose-mint --to 0xContributor --badge 1 --uri ipfs://CID sage council set-config --badge $SBT --badge-id 1 --target $PROMPT_REGISTRY sage council allow --selector addForkedPrompt(string,string,string,string,address)","title":"Get Started"},{"location":"sections/14-license/","text":"License MIT. See the repository for full docs, guides, and examples.","title":"License"},{"location":"sections/14-license/#license","text":"MIT. See the repository for full docs, guides, and examples.","title":"License"},{"location":"sections/15-roadmap/","text":"Roadmap Completed SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Full testnet launch with airdrop incentives and Discord; CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most.","title":"Roadmap"},{"location":"sections/15-roadmap/#roadmap","text":"Completed SubDAO factory, Library and Prompt registries, governance flows, Boosts , Premiums , SBTs , MCP , CLI , and web app are live on Base Sepolia. In Progress Full testnet launch with airdrop incentives and Discord; CLI V2 with meta prompting agent, Fjord partnership, and web app. Mainnet Execute the launch sequence, wire canonical liquidity, and transition ownership entirely to DAO contracts. Growth First community libraries in creative AI, research, and agent ops. Grants and bounties focused on subjective domains where human curation matters most.","title":"Roadmap"},{"location":"sections/16-license/","text":"License MIT. See the repository for full docs, guides, and examples.","title":"License"},{"location":"sections/16-license/#license","text":"MIT. See the repository for full docs, guides, and examples.","title":"License"}]}